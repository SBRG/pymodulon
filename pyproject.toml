title = "pymodulon TOML configuration file"

################################################################################
# Build tools configuration                                                    #
################################################################################

[build-system]
requires = [
    "setuptools >= 49.6.0",
    "wheel"
]
build-backend = "setuptools.build_meta"

################################################################################
# Lint tools configuration                                                     #
################################################################################

[tool.black]
line-length = 88
python-version = [
    "py36",
    "py37",
    "py38"
]


[tool.isort]
profile = "black"
src_paths = [
    "src/pymodulon"
]
indent = 4
lines_after_imports = 2


################################################################################
# Testing tools configuration                                                  #
################################################################################

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --strict-markers --tb=short"
testpaths = [
    "tests"
]
python_files = [
    "test.py",
    "test_*.py"
]


[tool.coverage.paths]
source = [
    "src"
]


[tool.coverage.run]
branch = true
parallel = true
source = [
    "src",
    "tests"
]


[tool.coverage.report]
show_missing = true
precision = 2

################################################################################
# Testing configuration                                                        #
################################################################################

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 3.20
envlist =
    clean,
    lint,
    pypi-description,
    py3{6,7,8},
    docs,
    report
isolated_build = true
skip_missing_interpreters = true


[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38


[testenv]
description = Base test environment configuration.
passenv =
    PY_COLORS
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    PY_COLORS={env:PY_COLORS:1}
usedevelop = true
depends =
    py3{6,7,8}: clean
    report: py3{6,7,8}


[testenv:clean]
description = Clean previous coverage reports.
skip_install = true
deps =
    coverage[toml]
commands =
    coverage erase


[testenv:lint]
description = Lint code via pre-commit hooks, finishing with isort --> black --> flake8
skip_install = true
passenv = *
setenv =
    PRE_COMMIT_COLOR={env:PRE_COMMIT_COLOR:auto}
deps =
    pre-commit
commands =
    pre-commit install
    pre-commit autoupdate
    pre-commit run --show-diff-on-failure --all-files


[testenv:py3{6,7,8}]
description = Run tests under {basepython}.
extras = tests
deps = pytest
commands =
    pytest {posargs: --cov --cov-report=term-missing --cov-append -vv}


[testenv:pypi-description]
description = Ensure README.rst renders on PyPI via twine.
basepython = python3
skip_install = true
deps =
    build
    setuptools
    twine
    wheel
commands =
    python -m build -s -w -x -n {toxinidir} -o {envtmpdir}/build
    twine check {envtmpdir}/build/*


[testenv:docs]
description = Use Sphinx to build and check the documentation.
extras = docs
allowlist_externals=make
setenv =
    BUILDDIR={env:DOCS_BUILDDIR:{envdir}/docs_build}
    SPHINXOPTS={env:DOCS_SPHINXOPTS:'--color -W'}
commands =
    make SPHINXOPTS={env:SPHINXOPTS} BUILDDIR={env:BUILDDIR} -C docs html
    make SPHINXOPTS={env:SPHINXOPTS} BUILDDIR={env:BUILDDIR} -C docs linkcheck
    python -c 'import pathlib; print(r"Documentation available under file://\\{0\\}".format(pathlib.Path(r"{env:BUILDDIR}/html/index.html")))'


[testenv:report]
description = Report coverage over all test runs.
skip_install = true
deps =
    coverage[toml]
commands =
    coverage report
    coverage html

"""
